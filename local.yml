version: "3.8"

volumes:
  pg_data:
#  cache_data:

services:
  db:
    image: postgres
    container_name: rs-data-postgres-local
    restart: unless-stopped
    # env_file:
    #  - ./src/.envs/.local/.postgres
    environment:
      - DATABASE_USER=rsdata
      - DATABASE_PASSWORD=rsdatapasswd
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_DB=rsdata
    ports:
      - 5432:5432
    volumes:
      - pg_data:/var/lib/postgresql/data/
  
  # cache:
  #   image: redis
  #   volumes:
  #     - cache_data:/data/
  #   container_name: cache-rs-data
      
  updater:
    build:
      context: .
      dockerfile: ./src/updater/.compose/.local/Dockerfile
    image: rs-data-updater
    container_name: rs-data-updater-local
    volumes:
      - ./src/updater:/app
    env_file:
      - ./src/updater/.envs/.local/.app
      - ./src/updater/.envs/.local/.postgres
      - .env
    depends_on:
      - db
      # - cache
    tty: true  # to keep container running (no need if uvicorn runs)

  api:
    build:
      context: .
      dockerfile: ./src/api/.compose/.local/Dockerfile
    image: rs-data-api
    container_name: rs-data-api-local
    ports:
      - 8000:8000
    volumes:
      - ./src/api:/app
    env_file:
      - ./src/api/.envs/.local/.app
      - ./src/api/.envs/.local/.postgres
      - .env
    depends_on:
      - db
    # - cache
    # networks:
      # - rs-data_default
    
  django:
    build:
      context: .
      dockerfile: ./src/frontend/compose/local/django/Dockerfile
    image: rs-data-frontend-django-local
    container_name: rs-data-frontend-django-local
    depends_on:
      - db
    volumes:
      - ./src/frontend:/app:z
    env_file:
      - ./src/frontend/.envs/.local/.django
      - ./src/frontend/.envs/.local/.postgres
    ports:
      - '5000:5000'
    # networks:
      # - rs-data_default
    command: /start

# networks:
  # rs-data_default: # this network is created autmatically for the project
    # so not need to add it to the services within the project.
    # external: true # Used when network already exists and this network in not
    # created.