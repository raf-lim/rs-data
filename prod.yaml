version: "3.8"

volumes:
  pg_data:
#  cache_data:

services:
  db:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: "rsdata"
      POSTGRES_PASSWORD: "rsdatapasswd"
      POSTGRES_HOST: "db"
      POSTGRES_PORT: "5432"
      POSTGRES_DB: "rsdata"
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data/
  
  # cache:
  #   image: redis
  #   volumes:
  #     - cache_data:/data/
  #   container_name: cache
      
  updater:
    build:
      context: .
      dockerfile: ./src/updater/Dockerfile
      target: prod
    image: rs-data-updater-prod
    container_name: updater
    env_file:
      - ./src/updater/.envs/.app
      - .env
    depends_on:
      - db
      # - cache
    tty: true  # to keep container running (no need if uvicorn runs)

  api:
    build:
      context: .
      dockerfile: ./src/api/Dockerfile
      target: prod
    image: rs-data-api-prod
    container_name: api
    ports:
      - 8000:8000
    env_file:
      - ./src/api/.envs/.app
      - .env
    depends_on:
      - db
    # - cache
    # networks:
    #   - rs-data_default

  django:
    build:
      context: .
      dockerfile: ./src/frontend/compose/production/django/Dockerfile
      # target: prod
    image: rs-data-frontend-prod
    container_name: frontend
    depends_on:
      - db
    env_file:
      - ./src/frontend/.envs/.production
    ports:
      - "5000:5000"
    # networks:
      # - rs-data_default
    command: /start

# networks:
  # rs-data_default: # this network is created automatically for the project
    # so no need to add it to the services within the project.
    # external: true # Used when network already exists and this network in not
    # created.