version: "3.8"

volumes:
  pg_data:
#   cache_data:

services:
  db:
    image: postgres
    container_name: rs-data-postgres-local
    restart: unless-stopped
    env_file:
      - ./src/.envs/.local/.postgres
    ports:
      - 5432:5432
    volumes:
      - pg_data:/var/lib/postgresql/data/
      
  
  # cache:
  #   image: redis
  #   volumes:
  #     - cache_data:/data/
  #   container_name: cache-rs-data

  api:
    build:
      context: .
      dockerfile: ./src/api/.compose/.local/Dockerfile
    image: rs-data-api
    container_name: rs-data-api-local
    ports:
      - 8000:8000
    volumes:
      - ./src/api:/app
    env_file:
      - ./src/.envs/.local/.api
      - ./src/.envs/.local/.postgres
      - .env
    depends_on:
      - db
    # - cache
    links:
      - db
    # - cache
    # networks:
    #   - rs-data_default
    
      
  updater:
    build:
      context: .
      dockerfile: ./src/updater/.compose/.local/Dockerfile
    image: rs-data-updater
    container_name: rs-data-updater-local
    volumes:
      - ./src/updater:/app
    env_file:
      - ./src/.envs/.local/.postgres
      - .env
    depends_on:
      - db
      # - cache
    links:
      - db
    #   - cache
    tty: true  # to keep container running (no need if uvicorn runs)

  django:
    build:
      context: .
      dockerfile: ./src/frontend/compose/production/django/Dockerfile
    image: rs-data-frontend-django-production
    container_name: rs-data-frontend-django-production
    # depends_on:
    #   - db
    # volumes:
    #   - ./src/frontend:/app:z
    env_file:
    #   - ./src/.envs/.local/.frontend
      - ./src/.envs/.local/.postgres
    ports:
      - '5000:5000'
    command: /start

# networks:
#   rs-data_default:
#     external: true